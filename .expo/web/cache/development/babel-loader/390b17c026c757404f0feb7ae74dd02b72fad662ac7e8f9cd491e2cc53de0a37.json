{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Logo from \"../assets/logo.png\";\nimport { Entypo } from '@expo/vector-icons';\nimport Background from \"../components/Login/Background\";\nimport { useForm } from \"../hooks/useForm\";\nimport { useContext, useEffect, useState } from \"react\";\nimport authContext from \"../context/auth/authContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar Login = function Login() {\n  var _useContext = useContext(authContext),\n    signIn = _useContext.signIn,\n    errorMessage = _useContext.errorMessage,\n    removeError = _useContext.removeError,\n    addError = _useContext.addError;\n  var _useForm = useForm({\n      username: '',\n      password: ''\n    }),\n    username = _useForm.username,\n    password = _useForm.password,\n    onChange = _useForm.onChange;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  useEffect(function () {\n    if ((errorMessage == null ? void 0 : errorMessage.length) === 0) return;\n    setTimeout(function () {\n      removeError();\n    }, 5000);\n  }, [errorMessage]);\n  var onLogin = function onLogin() {\n    if (username.trim() === '' || password.trim() === '') {\n      addError();\n      return;\n    }\n    Keyboard.dismiss();\n    signIn({\n      username: username,\n      password: password\n    });\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    children: _jsxs(Background, {\n      children: [_jsx(StatusBar, {\n        hidden: true,\n        backgroundColor: \"white\",\n        style: \"auto\"\n      }), _jsx(View, {\n        style: {\n          position: \"relative\",\n          marginTop: 120,\n          width: width,\n          height: height - 120,\n          backgroundColor: \"white\",\n          borderTopLeftRadius: 100,\n          alignItems: \"center\",\n          backgroundColor: \"#fff\",\n          shadowOffset: {\n            width: 0,\n            height: 1\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 3,\n          elevation: 5\n        },\n        children: _jsxs(View, {\n          style: {\n            width: width - 50\n          },\n          children: [_jsx(View, {\n            style: {\n              alignItems: \"center\"\n            },\n            children: _jsx(Image, {\n              source: Logo,\n              style: {\n                width: width - 100,\n                height: 100,\n                resizeMode: \"contain\",\n                marginVertical: 50\n              }\n            })\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                color: \"#000000\"\n              },\n              children: \"Nombre de usuario\"\n            }), _jsx(TextInput, {\n              placeholder: \"Nombre de Usuario\",\n              keyboardType: \"default\",\n              onChangeText: function onChangeText(value) {\n                return onChange(value, \"username\");\n              },\n              value: username,\n              onSubmitEditing: onLogin,\n              style: {\n                marginVertical: 10,\n                paddingHorizontal: 10,\n                paddingVertical: 10,\n                backgroundColor: \"#F0F0F2\",\n                borderRadius: 3\n              }\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                color: \"#000000\"\n              },\n              children: \"Contrase\\xF1a\"\n            }), _jsxs(View, {\n              style: {\n                position: \"relative\"\n              },\n              children: [_jsx(TextInput, {\n                placeholder: \"Contrase\\xF1a\",\n                onChangeText: function onChangeText(value) {\n                  return onChange(value, \"password\");\n                },\n                value: password,\n                onSubmitEditing: onLogin,\n                secureTextEntry: show ? false : true,\n                style: {\n                  marginVertical: 10,\n                  paddingHorizontal: 10,\n                  paddingVertical: 10,\n                  backgroundColor: \"#F0F0F2\",\n                  borderRadius: 3\n                }\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  return setShow(!show);\n                },\n                style: {\n                  position: \"absolute\",\n                  top: 22,\n                  right: 10\n                },\n                children: _jsx(Entypo, {\n                  name: show ? \"eye-with-line\" : \"eye\",\n                  size: 24,\n                  color: \"black\"\n                })\n              })]\n            })]\n          }), _jsx(View, {\n            children: _jsx(Pressable, {\n              onPress: onLogin,\n              style: {\n                backgroundColor: \"#47b2e4\",\n                borderRadius: 3,\n                marginVertical: 10,\n                paddingHorizontal: 10,\n                paddingVertical: 10,\n                alignItems: \"center\"\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: \"700\",\n                  color: \"#FFFFFF\"\n                },\n                children: \"INICIAR SESI\\xD3N\"\n              })\n            })\n          }), errorMessage !== \"checking\" ? _jsx(View, {\n            style: {\n              position: 'absolute',\n              top: -50,\n              right: 0\n            },\n            children: _jsx(View, {\n              style: {\n                backgroundColor: \"#e2790a\",\n                padding: 10,\n                borderRadius: 3\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: \"#ffffff\"\n                },\n                children: errorMessage\n              })\n            })\n          }) : null]\n        })\n      })]\n    })\n  });\n};\nexport default Login;","map":{"version":3,"names":["StatusBar","Image","Keyboard","KeyboardAvoidingView","Platform","TouchableHighlight","Dimensions","View","Text","TextInput","Pressable","Logo","Entypo","Background","useForm","useContext","useEffect","useState","authContext","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","Login","_useContext","signIn","errorMessage","removeError","addError","_useForm","username","password","onChange","_useState","_useState2","_slicedToArray","show","setShow","length","setTimeout","onLogin","trim","dismiss","style","OS","children","hidden","backgroundColor","position","marginTop","borderTopLeftRadius","alignItems","shadowOffset","shadowOpacity","shadowRadius","elevation","source","resizeMode","marginVertical","color","placeholder","keyboardType","onChangeText","value","onSubmitEditing","paddingHorizontal","paddingVertical","borderRadius","secureTextEntry","onPress","top","right","name","size","fontWeight","padding"],"sources":["C:/Users/Jorge/Escritorio/repositorios/diagramsApp/Screens/Login.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { Image, Keyboard, KeyboardAvoidingView, Platform, TouchableHighlight } from \"react-native\";\r\nimport { Dimensions, View, Text, TextInput, Pressable } from \"react-native\";\r\nimport Logo from '../assets/logo.png';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport Background from \"../components/Login/Background\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport authContext from \"../context/auth/authContext\";\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n\r\nconst Login = () => {\r\n  const { signIn, errorMessage, removeError, addError } = useContext(authContext);\r\n\r\n  const { username, password, onChange } = useForm({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage?.length === 0) return;\r\n    setTimeout(() => {\r\n      removeError();\r\n    }, 5000)\r\n  }, [errorMessage])\r\n\r\n  const onLogin = () => {\r\n    if (username.trim() === '' || password.trim() === '') {\r\n      addError();\r\n      return;\r\n    }\r\n\r\n    Keyboard.dismiss();\r\n    signIn({ username, password });\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <Background>\r\n        <StatusBar hidden={true} backgroundColor=\"white\" style=\"auto\" />\r\n        <View\r\n          style={{\r\n            position: \"relative\",\r\n            marginTop: 120,\r\n            width: width,\r\n            height: height - 120,\r\n            backgroundColor: \"white\",\r\n            borderTopLeftRadius: 100,\r\n            alignItems: \"center\",\r\n            backgroundColor: \"#fff\",\r\n            shadowOffset: { width: 0, height: 1 },\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 3,\r\n            elevation: 5,\r\n          }}\r\n        >\r\n          <View style={{ width: width - 50 }}>\r\n            <View style={{ alignItems: \"center\" }}>\r\n              <Image\r\n                source={Logo}\r\n                style={{\r\n                  width: width - 100,\r\n                  height: 100,\r\n                  resizeMode: \"contain\",\r\n                  marginVertical: 50,\r\n                }}\r\n              />\r\n            </View>\r\n            <View>\r\n              <Text style={{ color: \"#000000\" }}>Nombre de usuario</Text>\r\n              <TextInput\r\n                placeholder=\"Nombre de Usuario\"\r\n                keyboardType=\"default\"\r\n                onChangeText={(value) => onChange(value, \"username\")}\r\n                value={username}\r\n                onSubmitEditing={onLogin}\r\n                style={{\r\n                  marginVertical: 10,\r\n                  paddingHorizontal: 10,\r\n                  paddingVertical: 10,\r\n                  backgroundColor: \"#F0F0F2\",\r\n                  borderRadius: 3,\r\n                }}\r\n              />\r\n            </View>\r\n            <View>\r\n              <Text style={{ color: \"#000000\" }}>Contraseña</Text>\r\n              <View style={{ position: \"relative\" }}>\r\n                <TextInput\r\n                  placeholder=\"Contraseña\"\r\n                  onChangeText={(value) => onChange(value, \"password\")}\r\n                  value={password}\r\n                  onSubmitEditing={onLogin}\r\n                  secureTextEntry={show ? false : true}\r\n                  style={{\r\n                    marginVertical: 10,\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 10,\r\n                    backgroundColor: \"#F0F0F2\",\r\n                    borderRadius: 3,\r\n                  }}\r\n                />\r\n                <Pressable onPress={() => setShow(!show)} style={{\r\n                  position: \"absolute\",\r\n                  top: 22,\r\n                  right: 10\r\n                }}>\r\n                  <Entypo name={show ? \"eye-with-line\" : \"eye\" } size={24} color=\"black\" />\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n            <View>\r\n              <Pressable\r\n                onPress={onLogin}\r\n                style={{\r\n                  backgroundColor: \"#47b2e4\",\r\n                  borderRadius: 3,\r\n                  marginVertical: 10,\r\n                  paddingHorizontal: 10,\r\n                  paddingVertical: 10,\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Text style={{ fontWeight: \"700\", color: \"#FFFFFF\" }}>\r\n                  INICIAR SESIÓN\r\n                </Text>\r\n              </Pressable>\r\n            </View>\r\n            {errorMessage !== \"checking\" ? (\r\n              <View style={{ position: 'absolute', top: -50, right: 0 }}>\r\n                <View\r\n                  style={{\r\n                    backgroundColor: \"#e2790a\",\r\n                    padding: 10,\r\n                    borderRadius: 3,\r\n                  }}\r\n                >\r\n                  <Text style={{ color: \"#ffffff\" }}>{errorMessage}</Text>\r\n                </View>\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n      </Background>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}