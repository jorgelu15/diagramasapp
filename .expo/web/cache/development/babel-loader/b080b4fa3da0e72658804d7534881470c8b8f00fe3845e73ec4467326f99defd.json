{"ast":null,"code":"import { useContext } from \"react\";\nimport templateContext from \"../context/template/templateContext\";\nfunction useLineNode() {\n  var _useContext = useContext(templateContext),\n    coordLn = _useContext.coordLn,\n    setCoordLn = _useContext.setCoordLn;\n  var handleTouchDownLine = function handleTouchDownLine(e, idx) {\n    var newCoordLn = coordLn.filter(function (_, index) {\n      return index !== idx;\n    });\n    setCoordLn(newCoordLn);\n  };\n  return {\n    handleTouchDownLine: handleTouchDownLine\n  };\n}\nexport { useLineNode };","map":{"version":3,"names":["useContext","templateContext","useLineNode","_useContext","coordLn","setCoordLn","handleTouchDownLine","e","idx","newCoordLn","filter","_","index"],"sources":["C:/Users/Jorge/Escritorio/repositorios/diagramsApp/hooks/useLineNode.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport templateContext from \"../context/template/templateContext\";\r\n\r\nfunction useLineNode() {\r\n    const { coordLn, setCoordLn } = useContext(templateContext);\r\n    const handleTouchDownLine = (e, idx) => {\r\n        //configurar una barra para eliminar la linea a traves de un boton\r\n        const newCoordLn = coordLn.filter((_, index) => index !== idx);\r\n        setCoordLn(newCoordLn);\r\n\r\n    };\r\n    return {\r\n        handleTouchDownLine\r\n    }\r\n}\r\n\r\nexport { useLineNode };"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,eAAe;AAEtB,SAASC,WAAWA,CAAA,EAAG;EACnB,IAAAC,WAAA,GAAgCH,UAAU,CAACC,eAAe,CAAC;IAAnDG,OAAO,GAAAD,WAAA,CAAPC,OAAO;IAAEC,UAAU,GAAAF,WAAA,CAAVE,UAAU;EAC3B,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,CAAC,EAAEC,GAAG,EAAK;IAEpC,IAAMC,UAAU,GAAGL,OAAO,CAACM,MAAM,CAAC,UAACC,CAAC,EAAEC,KAAK;MAAA,OAAKA,KAAK,KAAKJ,GAAG;IAAA,EAAC;IAC9DH,UAAU,CAACI,UAAU,CAAC;EAE1B,CAAC;EACD,OAAO;IACHH,mBAAmB,EAAnBA;EACJ,CAAC;AACL;AAEA,SAASJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}