{"ast":null,"code":"import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SketchBoard from \"../Screens/SketchBoard\";\nimport Diagrams from \"../Screens/Diagrams\";\nimport Login from \"../Screens/Login\";\nimport { useContext } from 'react';\nimport authContext from \"../context/auth/authContext\";\nimport Loading from \"../Screens/Loading\";\nimport Plantillas from \"../Screens/Plantillas\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function Navigator() {\n  var _useContext = useContext(authContext),\n    status = _useContext.status;\n  if (status === 'checking') return _jsx(Loading, {});\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    children: status !== \"authenticated\" ? _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        headerShown: false\n      }\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"SketchBoard\",\n        component: SketchBoard,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Diagramas\",\n        component: Diagrams\n      }), _jsx(Stack.Screen, {\n        name: \"Plantillas\",\n        component: Plantillas\n      })]\n    })\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","SketchBoard","Diagrams","Login","useContext","authContext","Loading","Plantillas","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","Navigator","_useContext","status","initialRouteName","children","Screen","name","component","options","headerShown"],"sources":["C:/Users/Jorge/Escritorio/repositorios/diagramsApp/navigator/Navigator.js"],"sourcesContent":["import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n\r\nimport SketchBoard from '../Screens/SketchBoard';\r\nimport Diagrams from '../Screens/Diagrams';\r\nimport Login from '../Screens/Login';\r\nimport { useContext } from 'react';\r\nimport authContext from '../context/auth/authContext';\r\nimport Loading from '../Screens/Loading';\r\nimport Plantillas from '../Screens/Plantillas';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function Navigator() {\r\n  const {status} = useContext(authContext);\r\n  \r\n  if(status === 'checking') return <Loading />\r\n  \r\n  return (\r\n    <Stack.Navigator initialRouteName=\"Login\">\r\n      {status !== \"authenticated\" ? (\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={Login}\r\n          options={{\r\n            headerShown: false,\r\n          }}\r\n        />\r\n      ) : (\r\n        <>\r\n          <Stack.Screen\r\n            name=\"SketchBoard\"\r\n            component={SketchBoard}\r\n            options={{\r\n              headerShown: false,\r\n            }}\r\n          />\r\n          <Stack.Screen name=\"Diagramas\" component={Diagrams} />\r\n          <Stack.Screen name=\"Plantillas\" component={Plantillas} />\r\n        </>\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n}"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,gCAAgC;AAG3E,OAAOC,WAAW;AAClB,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW;AAClB,OAAOC,OAAO;AACd,OAAOC,UAAU;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG/C,IAAMC,KAAK,GAAGd,0BAA0B,EAAE;AAE1C,eAAe,SAASe,SAASA,CAAA,EAAG;EAClC,IAAAC,WAAA,GAAiBZ,UAAU,CAACC,WAAW,CAAC;IAAjCY,MAAM,GAAAD,WAAA,CAANC,MAAM;EAEb,IAAGA,MAAM,KAAK,UAAU,EAAE,OAAOR,IAAA,CAACH,OAAO,KAAG;EAE5C,OACEG,IAAA,CAACK,KAAK,CAACC,SAAS;IAACG,gBAAgB,EAAC,OAAO;IAAAC,QAAA,EACtCF,MAAM,KAAK,eAAe,GACzBR,IAAA,CAACK,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,OAAO;MACZC,SAAS,EAAEnB,KAAM;MACjBoB,OAAO,EAAE;QACPC,WAAW,EAAE;MACf;IAAE,EACF,GAEFX,KAAA,CAAAF,SAAA;MAAAQ,QAAA,GACEV,IAAA,CAACK,KAAK,CAACM,MAAM;QACXC,IAAI,EAAC,aAAa;QAClBC,SAAS,EAAErB,WAAY;QACvBsB,OAAO,EAAE;UACPC,WAAW,EAAE;QACf;MAAE,EACF,EACFf,IAAA,CAACK,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEpB;MAAS,EAAG,EACtDO,IAAA,CAACK,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAEf;MAAW,EAAG;IAAA;EAE5D,EACe;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}