{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useContext, useEffect, useState } from \"react\";\nimport templateContext from \"../context/template/templateContext\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar sizeSquare = 30;\nvar widthSk = width > 800 ? width - 800 + 800 : 800,\n  heightSk = height > 800 ? height - 800 + 800 : 800;\nfunction useMoveSketch(statusLn, setStatusLn, scaleRatio, translateX, translateY, setTranslateX, setTranslateY, setscaleRatio, statusMove, setStatusMove) {\n  var _useContext = useContext(templateContext),\n    coordXY = _useContext.coordXY,\n    setcoordXY = _useContext.setcoordXY,\n    coordXYT = _useContext.coordXYT,\n    setcoordXYT = _useContext.setcoordXYT;\n  var _useState = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    shiftTrXY = _useState2[0],\n    setShiftTrXY = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastTap = _useState4[0],\n    setLastTap = _useState4[1];\n  var _useState5 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastTXY = _useState6[0],\n    setLastTXY = _useState6[1];\n  useEffect(function () {}, [translateX]);\n  useEffect(function () {}, [translateY]);\n  var handleTouchDownSk = function handleTouchDownSk(e) {\n    var coordXYSelected = coordXY == null ? void 0 : coordXY.map(function (item) {\n      return _objectSpread(_objectSpread({}, item), {}, {\n        isSelected: false\n      });\n    });\n    setcoordXY(coordXYSelected);\n    var coordXYTSelected = coordXYT == null ? void 0 : coordXYT.map(function (item) {\n      return _objectSpread(_objectSpread({}, item), {}, {\n        isSelected: false\n      });\n    });\n    setcoordXYT(coordXYTSelected);\n    setShiftTrXY(_objectSpread(_objectSpread({}, setShiftTrXY), {}, {\n      y: e.nativeEvent.pageY,\n      x: e.nativeEvent.pageX\n    }));\n  };\n  var handleTouchMoveSk = function handleTouchMoveSk(e) {\n    if (statusMove == 1 && statusLn != 2) {\n      var x_ = e.nativeEvent.pageX - shiftTrXY.x,\n        y_ = e.nativeEvent.pageY - shiftTrXY.y;\n      var mx = x_ / scaleRatio,\n        my = y_ / scaleRatio;\n      var LL = (widthSk - widthSk / scaleRatio) / 2,\n        LR = -(widthSk - width);\n      var LT = (heightSk - heightSk / scaleRatio) / 2,\n        LB = -(heightSk - LT - height / scaleRatio);\n      if (translateX + mx > LL) setTranslateX(LL);else if (translateX + mx < LR) setTranslateX(LR);else setTranslateX(translateX + mx);\n      if (translateY + my > LT) setTranslateY(LT);else if (translateY + my < LB) setTranslateY(LB);else setTranslateY(translateY + my);\n      setShiftTrXY(_objectSpread(_objectSpread({}, setShiftTrXY), {}, {\n        y: e.nativeEvent.pageY,\n        x: e.nativeEvent.pageX\n      }));\n    }\n  };\n  var handleTouchEndSk = function handleTouchEndSk(e) {\n    var actualTap = Date.now();\n    var DOUBLE_PRESS_DELAY = 300;\n    if (lastTap && actualTap - lastTap < DOUBLE_PRESS_DELAY) {\n      var xt = e.nativeEvent.pageX,\n        yt = e.nativeEvent.pageY,\n        range = 20;\n      if (lastTXY.x - range <= xt && xt <= lastTXY.x + range && lastTXY.y - range <= yt && yt <= lastTXY.y + range) {\n        var scalaTem = scaleRatio == 1 ? 3 : 1;\n        setscaleRatio(scalaTem);\n        var LL = (widthSk - widthSk / scalaTem) / 2;\n        var LR = -(widthSk - width);\n        var LT = (heightSk - heightSk / scalaTem) / 2;\n        var LB = -(heightSk - LT - height / scalaTem);\n        var zx = -(translateX - (width - width / scalaTem)) + xt / scalaTem;\n        var zy = -(translateY - (height - height / scalaTem)) + yt / scalaTem;\n        var tzoomX = -zx + width / 2 + (width - width / scalaTem) / 2;\n        var tzoomY = -zy + height / 2 + (height - height / scalaTem) / 2;\n        if (tzoomX > LL) {\n          tzoomX = LL;\n        } else if (tzoomX < LR) {\n          tzoomX = LR;\n        }\n        if (tzoomY > LT) {\n          tzoomY = LT;\n        } else if (tzoomY < LB) {\n          tzoomY = LB;\n        }\n        setTranslateX(tzoomX);\n        setTranslateY(tzoomY);\n      }\n    } else {\n      setLastTap(actualTap);\n      setLastTXY({\n        y: e.nativeEvent.pageY,\n        x: e.nativeEvent.pageX\n      });\n    }\n  };\n  return {\n    handleTouchDownSk: handleTouchDownSk,\n    handleTouchMoveSk: handleTouchMoveSk,\n    handleTouchEndSk: handleTouchEndSk\n  };\n}\nexport { useMoveSketch };","map":{"version":3,"names":["useContext","useEffect","useState","templateContext","Dimensions","_Dimensions$get","get","width","height","sizeSquare","widthSk","heightSk","useMoveSketch","statusLn","setStatusLn","scaleRatio","translateX","translateY","setTranslateX","setTranslateY","setscaleRatio","statusMove","setStatusMove","_useContext","coordXY","setcoordXY","coordXYT","setcoordXYT","_useState","x","y","_useState2","_slicedToArray","shiftTrXY","setShiftTrXY","_useState3","_useState4","lastTap","setLastTap","_useState5","_useState6","lastTXY","setLastTXY","handleTouchDownSk","e","coordXYSelected","map","item","_objectSpread","isSelected","coordXYTSelected","nativeEvent","pageY","pageX","handleTouchMoveSk","x_","y_","mx","my","LL","LR","LT","LB","handleTouchEndSk","actualTap","Date","now","DOUBLE_PRESS_DELAY","xt","yt","range","scalaTem","zx","zy","tzoomX","tzoomY"],"sources":["C:/Users/Jorge/Escritorio/repositorios/diagramsApp/hooks/useMoveSketch.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport templateContext from \"../context/template/templateContext\";\r\nimport { Dimensions } from \"react-native\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst sizeSquare = 30;\r\nconst widthSk = width > 800 ? (width - 800) + 800 : 800, heightSk = height > 800 ? (height - 800) + 800 : 800;\r\nfunction useMoveSketch(statusLn, setStatusLn, scaleRatio, translateX, translateY, setTranslateX, setTranslateY, setscaleRatio, statusMove, setStatusMove) {\r\n\r\n    const { coordXY, setcoordXY, coordXYT, setcoordXYT } = useContext(templateContext);\r\n    const [shiftTrXY, setShiftTrXY] = useState({ x: 0, y: 0 });\r\n\r\n    const [lastTap, setLastTap] = useState(null);\r\n\r\n    const [lastTXY, setLastTXY] = useState({ x: 0, y: 0 });\r\n\r\n    useEffect(() => { }, [translateX]);\r\n    useEffect(() => { }, [translateY]);\r\n\r\n    const handleTouchDownSk = (e) => {\r\n\r\n        const coordXYSelected = coordXY?.map((item) =>\r\n            ({ ...item, isSelected: false })\r\n        );\r\n        setcoordXY(coordXYSelected);\r\n\r\n        const coordXYTSelected = coordXYT?.map((item) =>\r\n            ({ ...item, isSelected: false })\r\n        );\r\n        setcoordXYT(coordXYTSelected);\r\n\r\n        setShiftTrXY({\r\n            ...setShiftTrXY,\r\n            y: e.nativeEvent.pageY,\r\n            x: e.nativeEvent.pageX,\r\n        });\r\n\r\n    };\r\n\r\n    const handleTouchMoveSk = (e) => {\r\n\r\n        if (statusMove == 1 && statusLn != 2) {\r\n\r\n            let x_ = e.nativeEvent.pageX - shiftTrXY.x, y_ = e.nativeEvent.pageY - shiftTrXY.y\r\n            let mx = x_ / scaleRatio, my = y_ / scaleRatio\r\n\r\n            let LL = (widthSk - (widthSk / scaleRatio)) / 2, LR = -(widthSk - width)\r\n            let LT = (heightSk - (heightSk / scaleRatio)) / 2, LB = -(heightSk - LT - (height / scaleRatio))\r\n\r\n\r\n            if ((translateX + mx) > LL)\r\n                setTranslateX(LL)\r\n            else if (((translateX + mx) < LR))\r\n                setTranslateX(LR)\r\n            else\r\n                setTranslateX(translateX + mx)\r\n\r\n            if ((translateY + my) > LT)\r\n                setTranslateY(LT)\r\n            else if ((translateY + my) < LB)\r\n                setTranslateY(LB)\r\n            else\r\n                setTranslateY(translateY + my)\r\n\r\n\r\n            setShiftTrXY({\r\n                ...setShiftTrXY,\r\n                y: e.nativeEvent.pageY,\r\n                x: e.nativeEvent.pageX,\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const handleTouchEndSk = (e) => {\r\n\r\n        const actualTap = Date.now();\r\n        const DOUBLE_PRESS_DELAY = 300;\r\n\r\n        if (lastTap && (actualTap - lastTap) < DOUBLE_PRESS_DELAY) {\r\n\r\n            let xt = e.nativeEvent.pageX, yt = e.nativeEvent.pageY, range = 20\r\n\r\n            if (((lastTXY.x - range) <= xt && xt <= (lastTXY.x + range)) &&\r\n                ((lastTXY.y - range) <= yt && yt <= (lastTXY.y + range))) {\r\n\r\n                let scalaTem = (scaleRatio == 1) ? 3 : 1\r\n                setscaleRatio(scalaTem)\r\n\r\n                //se calculan lo limites del sketch con respecto a las pantalla\r\n                let LL = (widthSk - (widthSk / scalaTem)) / 2;\r\n                let LR = -(widthSk - width);\r\n                let LT = (heightSk - (heightSk / scalaTem)) / 2;\r\n                let LB = -(heightSk - LT - (height / scalaTem));\r\n\r\n                // calculo del translate respecto a la posicion del doble click / no se ha contemplado el tamaño del sketch\r\n                let zx = -(translateX - (width - width / scalaTem)) + xt / scalaTem;\r\n                let zy = -(translateY - (height - height / scalaTem)) + yt / scalaTem;\r\n\r\n                let tzoomX = -zx + width / 2 + (width - width / scalaTem) / 2;\r\n                let tzoomY = -zy + height / 2 + (height - height / scalaTem) / 2;\r\n\r\n\r\n                // corregir si translate sale de los limites\r\n                if (tzoomX > LL) {\r\n                    tzoomX = LL;\r\n                } else if (tzoomX < LR) {\r\n                    tzoomX = LR;\r\n                }\r\n\r\n                if (tzoomY > LT) {\r\n                    tzoomY = LT;\r\n                } else if (tzoomY < LB) {\r\n                    tzoomY = LB;\r\n                }\r\n\r\n                setTranslateX(tzoomX)\r\n                setTranslateY(tzoomY)\r\n            }\r\n\r\n        } else {\r\n            setLastTap(actualTap);\r\n            setLastTXY({\r\n                y: e.nativeEvent.pageY,\r\n                x: e.nativeEvent.pageX,\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        handleTouchDownSk,\r\n        handleTouchMoveSk,\r\n        handleTouchEndSk\r\n    }\r\n}\r\n\r\nexport { useMoveSketch };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}