{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useContext, useEffect, useState } from \"react\";\nimport templateContext from \"../context/template/templateContext\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar sizeSquare = 30;\nvar widthSk = width > 800 ? width - 800 + 800 : 800,\n  heightSk = height > 800 ? height - 800 + 800 : 800;\nfunction useMoveComponent(lineaGuia, setLineaGuia, statusLn, setStatusLn, scaleRatio, statusMove, setStatusMove, guidesO, setGuidesO, guidesD, setGuidesD) {\n  var _useContext = useContext(templateContext),\n    coordXY = _useContext.coordXY,\n    setcoordXY = _useContext.setcoordXY,\n    coordXYT = _useContext.coordXYT,\n    setcoordXYT = _useContext.setcoordXYT,\n    coordLn = _useContext.coordLn,\n    setCoordLn = _useContext.setCoordLn;\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    pointOrigin = _useState2[0],\n    setPointOrigin = _useState2[1];\n  var _useState3 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    shiftXY = _useState4[0],\n    setShiftXY = _useState4[1];\n  var _useState5 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    oldCoords = _useState6[0],\n    setOldCoords = _useState6[1];\n  useEffect(function () {}, [coordXY]);\n  useEffect(function () {}, [coordXYT]);\n  useEffect(function () {}, [guidesO]);\n  useEffect(function () {}, [guidesD]);\n  useEffect(function () {}, [coordLn]);\n  var handleTouchDownElement = function handleTouchDownElement(e, idx) {\n    var _e$nativeEvent = e.nativeEvent,\n      pageX = _e$nativeEvent.pageX,\n      pageY = _e$nativeEvent.pageY;\n    if (statusLn === 1) {\n      var xc = parseInt(coordXY[idx].x),\n        yc = parseInt(coordXY[idx].y);\n      if (lineaGuia.id_component_origin === -1 || lineaGuia.ancla1 === -1) {\n        setGuidesO(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            status: true,\n            point: [{\n              x: xc + sizeSquare,\n              y: yc\n            }, {\n              x: xc + sizeSquare * 2,\n              y: yc + sizeSquare\n            }, {\n              x: xc + sizeSquare,\n              y: yc + sizeSquare * 2\n            }, {\n              x: xc,\n              y: yc + sizeSquare\n            }],\n            coord: coordXY[idx]\n          });\n        });\n        setLineaGuia(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            status: false,\n            id_component_origin: coordXY[idx].id_u\n          });\n        });\n      } else if (lineaGuia.ancla2 === -1 && lineaGuia.id_component_origin !== coordXY[idx].id_u) {\n        setGuidesD(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            status: true,\n            point: [{\n              x: xc + sizeSquare,\n              y: yc\n            }, {\n              x: xc + sizeSquare * 2,\n              y: yc + sizeSquare\n            }, {\n              x: xc + sizeSquare,\n              y: yc + sizeSquare * 2\n            }, {\n              x: xc,\n              y: yc + sizeSquare\n            }],\n            coord: coordXY[idx]\n          });\n        });\n        setLineaGuia(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            status: false,\n            id_component_destiny: coordXY[idx].id_u\n          });\n        });\n      } else {\n        console.log(\"paso\");\n      }\n    } else {\n      setOldCoords({\n        x: parseInt(coordXY[idx].x),\n        y: parseInt(coordXY[idx].y)\n      });\n    }\n    setShiftXY(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        y: pageY,\n        x: pageX\n      });\n    });\n    setStatusMove(0);\n  };\n  var handleTouchMoveElement = function handleTouchMoveElement(e, idx) {\n    var _e$nativeEvent2 = e.nativeEvent,\n      pageX = _e$nativeEvent2.pageX,\n      pageY = _e$nativeEvent2.pageY;\n    if (statusMove == 0 && statusLn != 1) {\n      var x_ = Math.round(e.nativeEvent.pageX) - Math.round(shiftXY.x),\n        y_ = Math.round(e.nativeEvent.pageY) - Math.round(shiftXY.y);\n      var mx = x_ / scaleRatio,\n        my = y_ / scaleRatio;\n      var updatedX = parseInt(coordXY[idx].x) + mx;\n      var updatedY = parseInt(coordXY[idx].y) + my;\n      if (updatedX < 0 || updatedX + sizeSquare * 2 > widthSk) {\n        updatedX = coordXY[idx].x;\n      }\n      if (updatedY < 0 || updatedY + sizeSquare * 2 > heightSk) {\n        updatedY = coordXY[idx].y;\n      }\n      var updatedCoordXY = _toConsumableArray(coordXY);\n      updatedCoordXY[idx] = _objectSpread(_objectSpread({}, coordXY[idx]), {}, {\n        x: updatedX,\n        y: updatedY\n      });\n      setcoordXY(updatedCoordXY);\n      setShiftXY(_objectSpread(_objectSpread({}, setShiftXY), {}, {\n        y: e.nativeEvent.pageY,\n        x: e.nativeEvent.pageX\n      }));\n    }\n  };\n  var handleTouchUpElement = function handleTouchUpElement(e, idx) {\n    var _e$nativeEvent3 = e.nativeEvent,\n      pageX = _e$nativeEvent3.pageX,\n      pageY = _e$nativeEvent3.pageY;\n    var xPos = parseInt(coordXY[idx].x);\n    var yPos = parseInt(coordXY[idx].y);\n    var newX, newY;\n    var roundXPos = Math.round(xPos);\n    var roundYPos = Math.round(yPos);\n    var roundedSizeSquare = Math.round(sizeSquare);\n    var xRemainder = roundXPos % roundedSizeSquare;\n    var yRemainder = roundYPos % roundedSizeSquare;\n    newX = xRemainder < Math.round(roundedSizeSquare / 2) ? roundXPos - xRemainder : roundXPos + roundedSizeSquare - xRemainder;\n    newY = yRemainder < Math.round(roundedSizeSquare / 2) ? roundYPos - yRemainder : roundYPos + roundedSizeSquare - yRemainder;\n    if (coordXY[idx].type != 3) {\n      coordXY.map(function (item, ite) {\n        if (ite !== idx && item.type != 3) {\n          var xDiff = Math.abs(parseInt(item.x) - newX);\n          var yDiff = Math.abs(parseInt(item.y) - newY);\n          var collisionThreshold = sizeSquare;\n          if (xDiff <= collisionThreshold && yDiff <= collisionThreshold) {\n            newX = oldCoords.x;\n            newY = oldCoords.y;\n          }\n        }\n        return item;\n      });\n    }\n    var updatedCoordXY = coordXY.map(function (item, indx) {\n      return idx === indx ? _objectSpread(_objectSpread({}, item), {}, {\n        x: newX,\n        y: newY,\n        isSelected: true\n      }) : item;\n    });\n    setcoordXY(updatedCoordXY);\n    setStatusMove(1);\n  };\n  return {\n    coordXY: coordXY,\n    setcoordXY: setcoordXY,\n    coordXYT: coordXYT,\n    setcoordXYT: setcoordXYT,\n    handleTouchDownElement: handleTouchDownElement,\n    handleTouchMoveElement: handleTouchMoveElement,\n    handleTouchUpElement: handleTouchUpElement\n  };\n}\nexport { useMoveComponent };","map":{"version":3,"names":["useContext","useEffect","useState","templateContext","_Dimensions$get","Dimensions","get","width","height","sizeSquare","widthSk","heightSk","useMoveComponent","lineaGuia","setLineaGuia","statusLn","setStatusLn","scaleRatio","statusMove","setStatusMove","guidesO","setGuidesO","guidesD","setGuidesD","_useContext","coordXY","setcoordXY","coordXYT","setcoordXYT","coordLn","setCoordLn","_useState","_useState2","_slicedToArray","pointOrigin","setPointOrigin","_useState3","x","y","_useState4","shiftXY","setShiftXY","_useState5","_useState6","oldCoords","setOldCoords","handleTouchDownElement","e","idx","_e$nativeEvent","nativeEvent","pageX","pageY","xc","parseInt","yc","id_component_origin","ancla1","prevState","_objectSpread","status","point","coord","id_u","ancla2","id_component_destiny","console","log","handleTouchMoveElement","_e$nativeEvent2","x_","Math","round","y_","mx","my","updatedX","updatedY","updatedCoordXY","_toConsumableArray","handleTouchUpElement","_e$nativeEvent3","xPos","yPos","newX","newY","roundXPos","roundYPos","roundedSizeSquare","xRemainder","yRemainder","type","map","item","ite","xDiff","abs","yDiff","collisionThreshold","indx","isSelected"],"sources":["C:/Users/Jorge/Escritorio/repositorios/diagramsApp/hooks/useMoveComponent.js"],"sourcesContent":["import { Dimensions } from \"react-native\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport templateContext from \"../context/template/templateContext\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst sizeSquare = 30;\r\nconst widthSk = width > 800 ? (width - 800) + 800 : 800, heightSk = height > 800 ? (height - 800) + 800 : 800;\r\nfunction useMoveComponent(lineaGuia, setLineaGuia, statusLn,  setStatusLn, scaleRatio, statusMove, setStatusMove, guidesO, setGuidesO, guidesD, setGuidesD) {\r\n\r\n    const { coordXY, setcoordXY, coordXYT, setcoordXYT, coordLn, setCoordLn } = useContext(templateContext);\r\n\r\n    const [pointOrigin, setPointOrigin] = useState(-1);\r\n\r\n    const [shiftXY, setShiftXY] = useState({ x: 0, y: 0 });\r\n\r\n    const [oldCoords, setOldCoords] = useState({ x: 0, y: 0 });\r\n\r\n    useEffect(() => { }, [coordXY]);\r\n    useEffect(() => { }, [coordXYT]);\r\n    useEffect(() => { }, [guidesO]);\r\n    useEffect(() => { }, [guidesD]);\r\n    useEffect(() => { }, [coordLn]);\r\n\r\n    const handleTouchDownElement = (e, idx) => {\r\n        const { pageX, pageY } = e.nativeEvent;\r\n        \r\n\r\n        if (statusLn === 1) {\r\n\r\n            let xc = parseInt(coordXY[idx].x), yc = parseInt(coordXY[idx].y);\r\n\r\n            if(lineaGuia.id_component_origin === -1 || lineaGuia.ancla1 === -1){\r\n                setGuidesO(prevState => ({\r\n                    ...prevState,\r\n                    status: true,\r\n                    point: [\r\n                        { x: xc + (sizeSquare), y: yc },\r\n                        { x: xc + (sizeSquare * 2), y: yc + (sizeSquare) },\r\n                        { x: xc + (sizeSquare), y: yc + (sizeSquare * 2) },\r\n                        { x: xc, y: yc + (sizeSquare) }\r\n                    ],\r\n                    coord: coordXY[idx]\r\n                }))\r\n\r\n                setLineaGuia(prevState => ({\r\n                    ...prevState,\r\n                    status: false,\r\n                    id_component_origin: coordXY[idx].id_u,\r\n                }))\r\n            }\r\n            else if(lineaGuia.ancla2 === -1 && lineaGuia.id_component_origin !== coordXY[idx].id_u){\r\n                setGuidesD(prevState => ({\r\n                    ...prevState,\r\n                    status: true,\r\n                    point: [\r\n                        { x: xc + (sizeSquare), y: yc },\r\n                        { x: xc + (sizeSquare * 2), y: yc + (sizeSquare) },\r\n                        { x: xc + (sizeSquare), y: yc + (sizeSquare * 2) },\r\n                        { x: xc, y: yc + (sizeSquare) }\r\n                    ],\r\n                    coord: coordXY[idx]\r\n                }))\r\n\r\n                setLineaGuia(prevState => ({\r\n                    ...prevState,\r\n                    status: false,\r\n                    id_component_destiny: coordXY[idx].id_u,\r\n                }))\r\n            }\r\n            else{\r\n                console.log(\"paso\")\r\n            }\r\n            \r\n        }\r\n        else {\r\n\r\n            setOldCoords({\r\n                x: parseInt(coordXY[idx].x),\r\n                y: parseInt(coordXY[idx].y)\r\n            })\r\n\r\n        }\r\n\r\n        //coord antes de la colisión\r\n        setShiftXY(prevState => ({\r\n            ...prevState,\r\n            y: pageY,\r\n            x: pageX,\r\n        }));\r\n\r\n        setStatusMove(0); // estado del movimiento\r\n    };\r\n\r\n    const handleTouchMoveElement = (e, idx) => {\r\n\r\n        const { pageX, pageY } = e.nativeEvent;\r\n\r\n        /*\r\n        if (statusLn == 2) {\r\n\r\n            let selectAnchor\r\n            let xcal = shiftXY.x - pageX, ycal = shiftXY.y - pageY\r\n\r\n            if (Math.abs(xcal) > Math.abs(ycal)) {\r\n                selectAnchor = (xcal > 0 ? 3 : 1)\r\n            }\r\n            else {\r\n                selectAnchor = (ycal > 0 ? 0 : 2)\r\n            }\r\n\r\n            let selectaux = selectAnchor + 1\r\n            selectaux += (coordXY[idx].rotate/90)\r\n            while(selectaux > 4) selectaux -= 4\r\n\r\n            //console.log(selectaux,\"linea 84\")\r\n            \r\n            if((selectaux == 1 && coordXY[idx].ancla1 == 1)||\r\n               (selectaux == 2 && coordXY[idx].ancla2 == 1)||\r\n               (selectaux == 3 && coordXY[idx].ancla3 == 1)||\r\n               (selectaux == 4 && coordXY[idx].ancla4 == 1)){\r\n\r\n                if (pointOrigin !== -1) {\r\n\r\n                    if (pointOrigin !== coordXY[idx].id_u) {\r\n                        setLineaGuia(prevState => ({\r\n                            ...prevState,\r\n                            id_component_destiny: coordXY[idx].id_u,\r\n                            ancla2: selectAnchor,\r\n                            status: true\r\n                        }))\r\n                    }\r\n    \r\n                }\r\n    \r\n                setGuidesO(prevState => ({\r\n                    ...prevState,\r\n                    anchor: selectAnchor,\r\n                    status: true,\r\n                    idx: idx\r\n                }));\r\n            }\r\n\r\n        }*/\r\n\r\n        if (statusMove == 0 && statusLn != 1) {\r\n\r\n            //genera un movimiento lento, hace que el cuadro persiga al mouse\r\n            let x_ = Math.round(e.nativeEvent.pageX) - Math.round(shiftXY.x),\r\n                y_ = Math.round(e.nativeEvent.pageY) - Math.round(shiftXY.y); //posicion mouse actual - posicion mouse pasada\r\n\r\n            //movimiento del mouse en (x,y) con respecto a la escala\r\n            let mx = x_ / scaleRatio, my = y_ / scaleRatio;\r\n\r\n            let updatedX = parseInt(coordXY[idx].x) + mx;\r\n            let updatedY = parseInt(coordXY[idx].y) + my;\r\n\r\n            // colision cuadro a paredes\r\n            // si las coords en (x,y) son menores que 0 entonces el movimiento retorna (0,0) => (x,y)\r\n            if (updatedX < 0 || updatedX + sizeSquare * 2 > widthSk) {\r\n                updatedX = coordXY[idx].x; // Mantener la misma posición en x si hay colisión con las paredes\r\n            }\r\n\r\n            if (updatedY < 0 || updatedY + sizeSquare * 2 > heightSk) {\r\n                updatedY = coordXY[idx].y; // Mantener la misma posición en y si hay colisión con las paredes\r\n            }\r\n\r\n            //optimizacion de el movimiento de los componentes en el sketch\r\n            const updatedCoordXY = [...coordXY];\r\n            updatedCoordXY[idx] = { ...coordXY[idx], x: updatedX, y: updatedY };\r\n            setcoordXY(updatedCoordXY);\r\n\r\n            setShiftXY({\r\n                //se setea la posicion actual y pasa a ser la pasada\r\n                ...setShiftXY,\r\n                y: e.nativeEvent.pageY,\r\n                x: e.nativeEvent.pageX,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleTouchUpElement = (e, idx) => {\r\n\r\n        const { pageX, pageY } = e.nativeEvent;\r\n\r\n        /*\r\n        if (statusLn == 2) {\r\n\r\n            let selectAnchor\r\n            let xcal = shiftXY.x - pageX, ycal = shiftXY.y - pageY\r\n\r\n            if (Math.abs(xcal) > Math.abs(ycal)) {\r\n                selectAnchor = (xcal > 0 ? 3 : 1)\r\n            }\r\n            else {\r\n                selectAnchor = (ycal > 0 ? 0 : 2)\r\n            }\r\n            \r\n            let selectaux = selectAnchor + 1\r\n            selectaux += (coordXY[idx].rotate/90)\r\n            while(selectaux > 4) selectaux -= 4\r\n\r\n            //console.log(selectaux,\"linea 84\")\r\n            \r\n            if((selectaux == 1 && coordXY[idx].ancla1 == 1)||\r\n               (selectaux == 2 && coordXY[idx].ancla2 == 1)||\r\n               (selectaux == 3 && coordXY[idx].ancla3 == 1)||\r\n               (selectaux == 4 && coordXY[idx].ancla4 == 1)){\r\n\r\n                if (pointOrigin !== -1) {\r\n\r\n                    if (pointOrigin !== coordXY[idx].id_u) {\r\n                        setLineaGuia(prevState => ({\r\n                            ...prevState,\r\n                            id_component_destiny: coordXY[idx].id_u,\r\n                            ancla2: selectAnchor\r\n                        }))\r\n                    }\r\n                }\r\n\r\n                setGuidesO(prevState => ({\r\n                    ...prevState,\r\n                    anchor: selectAnchor\r\n                }));\r\n            }\r\n\r\n            // console.log(\"Pre validacion\", guides.anchor)\r\n            // if(pointOrigin !== -1 && guides.anchor == -1){\r\n            //     console.log(\"validacion\", guides.anchor)\r\n            //     pointOrigin = -1;\r\n            // }\r\n\r\n            //console.log(guides, pointOrigin, \"linea 204\")\r\n\r\n            if (pointOrigin === -1 || pointOrigin === coordXY[idx].id_u) {\r\n                setPointOrigin(coordXY[idx].id_u)\r\n                setStatusLn(1)\r\n            }\r\n            else if(pointOrigin !== -1 && guidesO.anchor == -1){\r\n                setPointOrigin(-1)\r\n                setStatusLn(1)\r\n            }\r\n            else {\r\n                if (pointOrigin !== coordXY[idx].id_u) {\r\n                    setCoordLn([...coordLn,\r\n                    {\r\n                        id_component_origin_db: 0,\r\n                        id_component_origin: pointOrigin,\r\n                        id_component_destiny_db: 0,\r\n                        id_component_destiny: coordXY[idx].id_u,\r\n                        ancla1: lineaGuia.ancla1,\r\n                        ancla2: lineaGuia.ancla2,\r\n                        isSelected: false\r\n                    }\r\n                    ])\r\n                    setLineaGuia(prevState => ({\r\n                        ...prevState,\r\n                        status: false\r\n                    }))\r\n                    setGuidesO(prevState => ({\r\n                        ...prevState,\r\n                        status: false\r\n                    }))\r\n\r\n                    setPointOrigin(-1)\r\n                    setStatusLn(0)\r\n                }\r\n            }\r\n\r\n            setStatusMove(1);\r\n            return\r\n        }*/\r\n\r\n        //se obtienen las posiciones (x,y) actuales\r\n        const xPos = parseInt(coordXY[idx].x);\r\n        const yPos = parseInt(coordXY[idx].y);\r\n\r\n        let newX, newY;\r\n\r\n        //se valida la posicion minima o maxima en (x,y) para que el componente encaje en un cuadro de lˆ2 y se almacena la posicion\r\n        //nueva en las variables\r\n        const roundXPos = Math.round(xPos);\r\n        const roundYPos = Math.round(yPos);\r\n        const roundedSizeSquare = Math.round(sizeSquare);\r\n\r\n        const xRemainder = roundXPos % roundedSizeSquare;\r\n        const yRemainder = roundYPos % roundedSizeSquare;\r\n\r\n        newX = xRemainder < Math.round(roundedSizeSquare / 2)\r\n            ? roundXPos - xRemainder\r\n            : roundXPos + roundedSizeSquare - xRemainder;\r\n\r\n        newY = yRemainder < Math.round(roundedSizeSquare / 2)\r\n            ? roundYPos - yRemainder\r\n            : roundYPos + roundedSizeSquare - yRemainder;\r\n\r\n        //en caso de que exista una colision con otro componente se setean la posicion del componente con las anteriores coordenadas\r\n        if (coordXY[idx].type != 3) {\r\n\r\n            coordXY.map((item, ite) => {\r\n                if (ite !== idx && item.type != 3) {\r\n                    const xDiff = Math.abs(parseInt(item.x) - newX);\r\n                    const yDiff = Math.abs(parseInt(item.y) - newY);\r\n                    const collisionThreshold = sizeSquare;\r\n                    if (xDiff <= collisionThreshold && yDiff <= collisionThreshold) {\r\n                        newX = oldCoords.x;\r\n                        newY = oldCoords.y;\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n\r\n        }\r\n\r\n        //en caso de esta todo ok, se setan con las nuevas coordenadas\r\n        const updatedCoordXY = coordXY.map((item, indx) =>\r\n            idx === indx ? { ...item, x: newX, y: newY, isSelected: true } : item\r\n        );\r\n\r\n        setcoordXY(updatedCoordXY);\r\n\r\n        //estado del movimiento\r\n        setStatusMove(1);\r\n    };\r\n\r\n    return {\r\n        coordXY,\r\n        setcoordXY,\r\n        coordXYT,\r\n        setcoordXYT,\r\n        handleTouchDownElement,\r\n        handleTouchMoveElement,\r\n        handleTouchUpElement\r\n    };\r\n}\r\nexport { useMoveComponent };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}